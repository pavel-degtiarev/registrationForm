!function(){"use strict";var t=Object.defineProperty,e=(e,s,i)=>(((e,s,i)=>{s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i})(e,"symbol"!=typeof s?s+"":s,i),i),s=Object.defineProperty,i=Object.defineProperty,r=(t,e,s)=>(((t,e,s)=>{e in t?i(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s})(t,"symbol"!=typeof e?e+"":e,s),s);class a{constructor(t){if(r(this,"state",-1),r(this,"id",null),r(this,"input",null),r(this,"label",null),r(this,"container",null),this.input=document.querySelector(`#${t}`),!this.input)throw new Error(`Поле с ID:${t} не найдено!`);if(this.label=document.querySelector(`label[for=${t}]`),!this.label)throw new Error(`У поля с ID:${t} не найдена подпись!`);this.container=this.input.parentElement,this.id=t}setBlurHandler(t){this.input.addEventListener("blur",t)}setState(t,e){switch(this.state=t,!0){case 1===this.state:this.container.classList.remove("field-invalid"),this.container.dataset.err="";break;case 0===this.state:this.container.classList.add("field-invalid"),this.container.dataset.err=e}}}var n=Object.defineProperty;function l(t){return u({patternMismatch:"Разрешены символы кириллицы, пробел и дефис.",tooLong:"Слишком много текста. Допускается не более 255 символов.",valueMissing:"Поле обязательно должно быть заполнено."},t)}function o(t,e){const s=u({tooLong:"Слишком длинный пароль. Допускается не более 255 символов.",tooShort:"Слишком короткий пароль. Должно быть не менее 8 символов.",valueMissing:"Поле обязательно должно быть заполнено."},t);if(0===s.result)return s;const i=[/\d/,/[a-z]/,/[A-Z]/,/[!@#$%&*]/].map((t=>e.pass.match(t))).every((t=>t));return e.pass&&!i?{result:0,message:"Пароль должен содержать минимум одну цифру, по одной заглавной и строчной букве и один символ."}:e.pass&&e.passRepeat&&e.pass!==e.passRepeat?{result:0,message:"Введенные пароли не совпадают."}:{result:1,message:""}}function u(t,e){for(const s of Object.keys(t))if(e[s])return{result:0,message:t[s]};return{result:1,message:""}}const h={firstName:l,lastName:l,email:function(t){return u({typeMismatch:"Неправильный формат email.",patternMismatch:"Неправильный формат email.",tooLong:"Слишком длинный адрес. Допускается не более 255 символов.",valueMissing:"Поле обязательно должно быть заполнено."},t)},pass:o,passRepeat:o,birthDate:function(t,e){const s=u({badInput:"Неправильно введена дата"},t);if(0===s.result)return s;const[i,r,a]=e.birthDate.split("-"),n=new Date(Number(i),Number(r)-1,Number(a)).valueOf(),l=new Date(Number(i)+18,Number(r)-1,Number(a)).valueOf(),o=(new Date).setHours(0,0,0);return o<n?{result:0,message:"Серьезно? Вы из будущего?"}:o<l?{result:0,message:"Регистрация разрешена только совершеннолетним."}:{result:1,message:""}}},c=document.getElementById("regForm");if(!c)throw new Error("Форма не найдена!");const m=new class{constructor(t){if(((t,e,s)=>{e in t?n(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s})(this,"symbol"!=typeof(e="button")?e+"":e,null),this.button=document.querySelector(`.${t}`),!this.button)throw new Error("Кнопка отправки формы не найдена!");var e}on(){this.button.classList.remove("disabled")}off(){this.button.classList.add("disabled")}}("form_submit"),b=Object.keys(h).map((t=>new a(t))),d=new class{constructor(t){var e;((t,e,i)=>{e in t?s(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i})(this,"symbol"!=typeof(e="validations")?e+"":e,{}),this.validations=t}check(t,e,s){return this.validations[t](e,s)}}(h);new class{constructor(t,s,i,r,a){e(this,"form",null),e(this,"state",{}),e(this,"fields",new Map),e(this,"validator",null),e(this,"submitButton",null),e(this,"submitCallback",(()=>{})),this.fieldBlurHandler=this.fieldBlurHandler.bind(this),this.formSubmitHandler=this.formSubmitHandler.bind(this),this.form=t,this.validator=i,this.submitButton=r,this.submitCallback=a,s.forEach((t=>{t.setBlurHandler(this.fieldBlurHandler),this.fields.set(t.input,t),this.state[t.id]=""}))}fieldBlurHandler(t){const e=t.target;e.value=e.value.trim(),this.state[e.id]=e.value;const{result:s,message:i}=this.validator.check(e.id,e.validity,this.state);this.fields.get(e).setState(s,i),this.buttonStateHandler()}buttonStateHandler(){[...this.fields.values()].map((t=>t.state)).every((t=>1===t))?(this.submitButton.on(),this.form.addEventListener("submit",this.formSubmitHandler)):(this.submitButton.off(),this.form.removeEventListener("submit",this.formSubmitHandler))}formSubmitHandler(t){t.preventDefault(),this.submitCallback(this.state)}}(c,b,d,m,(function(t){console.log("Данные формы отправлены",t)}))}();